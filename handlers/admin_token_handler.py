# Related third-party imports
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.types import ReplyKeyboardRemove

# Local application/library specific imports
from loader import dp
from States import AdminStates
from data import text
from db.views import get_token_list, create_token, delete_token
from app import admin_check
from keyboards.admin_kb import admin_menu_kb, admin_token_menu_kb


@dp.message_handler(Text(equals='üîë –¢–æ–∫–µ–Ω—ã'))
@admin_check
async def admin_token_menu_handler(message: types.Message):
    token_list = get_token_list()
    if not token_list:
        text = '–£ –≤–∞—Å –Ω–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è ChatGPT.'
    else:
        text = '–í–∞—à–∏ —Ç–æ–∫–µ–Ω—ã –¥–ª—è ChatGPT:\n' +\
               '\n'.join(f"ID: {token['id']}, Key: {token['key']}" for token in token_list) +\
               '\n–ß—Ç–æ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ —Å –Ω–∏–º–∏ —Å–¥–µ–ª–∞—Ç—å?'
    await message.answer(text, reply_markup=admin_token_menu_kb)


@dp.message_handler(Text(equals='üîº –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω'))
@admin_check
async def admin_add_token_user_handler(message: types.Message, state: FSMContext):
    await state.set_state(AdminStates.add_token.state)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 —Ç–æ–∫–µ–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', reply_markup=ReplyKeyboardRemove())


@dp.message_handler(state=AdminStates.add_token)
@admin_check
async def admin_add_token_process_handler(message: types.Message, state: FSMContext):
    token_key = create_token('openai', message.text)
    await message.reply(f'–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ —Ç–æ–∫–µ–Ω –¥–ª—è OpenAI —Å KEY={token_key}')
    await state.finish()
    await message.answer('üë®‚Äçüíª –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=admin_menu_kb)


@dp.message_handler(Text(equals='üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç–æ–∫–µ–Ω'))
@admin_check
async def admin_add_token_user_handler(message: types.Message, state: FSMContext):
    await state.set_state(AdminStates.delete_token.state)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ ‚Ññ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', reply_markup=ReplyKeyboardRemove())


@dp.message_handler(state=AdminStates.delete_token)
@admin_check
async def admin_add_token_process_handler(message: types.Message, state: FSMContext):
    token_to_delete = delete_token(int(message.text))
    message_text = '–¢–æ–∫–µ–Ω —Å —Ç–∞–∫–∏–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' if not token_to_delete else '–¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω'
    await message.reply(message_text)
    await state.finish()
    await message.answer('üë®‚Äçüíª –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=admin_menu_kb)
